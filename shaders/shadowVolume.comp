#version 430
layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;
layout(r32f, binding = 0) uniform image3D img_output;
uniform sampler3D smokeData;
uniform vec3 lightPos;
uniform vec3 shadowVolumeSize;
uniform vec3 smokeDims;

int STEPS = 100;

vec3 toSmokePos(vec3 pos)
{
	vec3 result = pos.xyz * 100;
	result = result + (smokeDims * 0.5);
	result = result / smokeDims;
	return vec3(result);
}

void main()
{           
	float shadowAmount = 0.0;

	ivec3 voxel_coords = ivec3(gl_GlobalInvocationID.xyz);

	vec3 toZeroOneRange = 1.0 / vec3(gl_NumWorkGroups * gl_WorkGroupSize);
	vec3 posWorldSpace = voxel_coords * toZeroOneRange + 0.0;
	posWorldSpace = posWorldSpace * shadowVolumeSize - (0.5 * shadowVolumeSize);

	float stepSize = shadowVolumeSize.x / STEPS;

	vec3 toLight = normalize(lightPos - posWorldSpace);
	vec3 posSmokeSpace;
	//for (int i = 0; i < STEPS; i++){
	//	posSmokeSpace = toSmokePos(posWorldSpace + i * toLight * stepSize);
	//	shadowAmount += texture(smokeData, posSmokeSpace).r * 0.2;
	//}
	//Calculate actual Shadow Amount
	//shadowAmount = imageLoad(smokeData, posSmokeSpace).r;

	//Write to Texture
	//imageStore(img_output, voxel_coords, vec4(shadowAmount));
	imageStore(img_output, voxel_coords, vec4(shadowAmount));
}